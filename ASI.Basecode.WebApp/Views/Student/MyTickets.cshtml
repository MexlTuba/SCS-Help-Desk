@model ASI.Basecode.Services.ServiceModels.MyTicketsViewModel

@{
    ViewData["Title"] = "SCS Help Desk";
}

@section Styles {
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.7.2/font/bootstrap-icons.css">
}

<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>@ViewData["Title"]</title>
    <script>
        function confirmDelete(ticketId) {
            if (confirm("Are you sure you want to delete this ticket?")) {
                window.location.href = '@Url.Action("Delete", "Student")?id=' + ticketId;
            }
        }
        
        function openDeleteModal(ticketId) {
            
            document.getElementById('ticketIdToDelete').value = ticketId
            document.getElementById('deleteTicketMessage').textContent = `Are you sure you want to delete Ticket ID #${ticketId}?`;
            console.log('Opening delete modal for Ticket ID:', ticketId);

           
            var modal = new bootstrap.Modal(document.getElementById('deleteTicketModal'));
            modal.show();
        }

        function closeModal() {
            var modalElement = document.getElementById('deleteTicketModal');
            if (modalElement) {
                modalElement.classList.remove('show');
                modalElement.setAttribute('aria-hidden', 'true');
                modalElement.style.display = 'none';
                document.body.classList.remove('modal-open');
                var backdrop = document.querySelector('.modal-backdrop'); 
                if (backdrop) {
                    backdrop.parentNode.removeChild(backdrop);
                }
            }
        }
        document.getElementById('deleteTicketForm').addEventListener('submit', function (event) {
            console.log('Submitting the delete form with ticket ID:', document.getElementById('ticketIdToDelete').value);
        });

    </script>
    <link rel="stylesheet" href="~/css/myTickets.css" />
</head>
<body>
    <div>
        <nav class="ticketNavBar navbar bg-body-tertiary shadow-lg">
            <a class="navbar-brand" href="#">
                <img src="~/img/scsHelpDeskLogo.svg" alt="Bootstrap" class="scsLogo">
            </a>
            <div class="d-grid gap-2 d-md-flex justify-content-md-end">
                <a href="@Url.Action("StudentDashboard", "Student")" class="btn btn-custom me-md-2 mr-5">Back to Homepage</a>
                <a asp-action="SignOutUser" asp-controller="Account" class="btn btn-danger logout-btn shadow-lg">Logout</a>
            </div>
        </nav>

        <div class="d-flex justify-content-center vh-90 mt-3">
            <div class="formContent card shadow-lg">
                <div class="card-body">
                    <div class="headers d-flex align-items-center">
                        <h1 class="custom-card-title flex-grow-1">My Tickets</h1>
                        <div class="container-sm my-2 mr-3 sha">
                            <form method="get" asp-action="MyTickets" asp-controller="Student">
                                <div class="row align-items-center bg-light rounded shadow-sm py-3">
                                    <div class="col-auto">
                                        <img src="~/img/sort.svg" style="width: 19px; height: auto;" alt="logo" />
                                        <span class="fw-bold text-muted">Sort by:</span>
                                    </div>

                                    <!-- Category Filter -->
                                    <div class="col-md">
                                        <select name="CategoryId" class="form-control form-select">
                                            <option disabled>Category</option>
                                            <option value="0" selected="@(Model.CategoryId == 0 ? "selected" : null)">All</option>
                                            @foreach (var category in Model.Categories)
                                            {
                                                <option value="@category.CategoryId" selected="@(category.CategoryId == Model.CategoryId ? "selected" : null)">
                                                    @category.CategoryType
                                                </option>
                                            }
                                        </select>
                                    </div>

                                    <!-- Status Filter -->
                                    <div class="col-md">
                                        <select name="StatusId" class="form-control form-select">
                                            <option disabled>Status</option>
                                            <option value="0" selected="@(Model.StatusId == 0 ? "selected" : null)">All</option>
                                            @foreach (var status in Model.Statuses.Where(s => s.StatusType != "Deleted"))
                                            {
                                                if (status.StatusId != 5) // Exclude the status with ID 5
                                                {
                                                    <option value="@status.StatusId" selected="@(status.StatusId == Model.StatusId ? "selected" : null)">
                                                        @status.StatusType
                                                    </option>
                                                }
                                            }
                                        </select>
                                    </div>


                                    <!-- Priority Filter -->
                                    <div class="col-md">
                                        <select name="PriorityId" class="form-control form-select">
                                            <option disabled>Priority</option>
                                            <option value="0" selected="@(Model.PriorityId == 0 ? "selected" : null)">All</option>
                                            @foreach (var priority in Model.Priorities)
                                            {
                                                <option value="@priority.PriorityId" selected="@(priority.PriorityId == Model.PriorityId ? "selected" : null)">
                                                    @priority.PriorityType
                                                </option>
                                            }
                                        </select>
                                    </div>

                                    <div class="col-md">
                                        <button type="submit" class="btn btn-custom">Apply Filters</button>
                                    </div>
                                    <div class="col-md">
                                        <a href="@Url.Action("MyTickets", "Student")" class="btn btn-outline-custom">Clear Filters</a>
                                    </div>
                                </div>
                            </form>
                        </div>
                    </div>

                    <!-- Ticket Table -->
                    <div class="table-responsive mt-4">
                        <table class="table table-striped text-center">
                            <thead style="background-color: #E68D4F; color: white; text-align: center;">
                                <tr>
                                    <th scope="col">Ticket ID</th>
                                    <th scope="col">Title</th>
                                    <th scope="col">Assigned to</th>
                                    <th scope="col">Category</th>
                                    <th scope="col">Priority</th>
                                    <th scope="col">Status</th>
                                    <th scope="col">Date Created</th>
                                    <th scope="col">Date Closed</th>
                                    <th scope="col">Action</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (Model.Tickets != null && Model.Tickets.Any())
                                {
                                    @foreach (var ticket in Model.Tickets)
                                    {
                                        <tr>
                                            <!-- Ticket ID -->
                                            <td>@ticket.TicketId</td>

                                            <!-- Title -->
                                            <td>@ticket.Title</td>

                                            <!-- Assigned To -->
                                            <td>
                                                <span style="background-color: #FFD98F; border-radius: 10px; padding: 5px 10px; font-weight: bold; color: black;">
                                                    @(string.IsNullOrEmpty(ticket.AssignedToName) ? "Unassigned" : ticket.AssignedToName)
                                                </span>
                                            </td>

                                            <!-- Category -->
                                            <td>
                                                <span style="background-color: #dee2e6; border-radius: 10px; padding: 5px 10px; font-weight: bold; color: black;">
                                                    @(Model.Categories.FirstOrDefault(c => c.CategoryId == ticket.CategoryId)?.CategoryType ?? "Unknown")
                                                </span>
                                            </td>

                                            <!-- Priority -->
                                            <td>
                                                @if (Model.Priorities.FirstOrDefault(p => p.PriorityId == ticket.PriorityId)?.PriorityType == "High")
                                                {
                                                    <span style="background-color: #FFCCCC; color: red; border-radius: 10px; padding: 5px 10px; font-weight: bold;">
                                                        <i class="bi bi-circle-fill" style="font-size: 10px; margin-right: 5px;"></i> High
                                                    </span>
                                                }
                                                else if (Model.Priorities.FirstOrDefault(p => p.PriorityId == ticket.PriorityId)?.PriorityType == "Medium")
                                                {
                                                    <span style="background-color: #FFEDCC; color: #E68D4F; border-radius: 10px; padding: 5px 10px; font-weight: bold;">
                                                        <i class="bi bi-circle-fill" style="font-size: 10px; margin-right: 5px;"></i> Medium
                                                    </span>
                                                }
                                                else if (Model.Priorities.FirstOrDefault(p => p.PriorityId == ticket.PriorityId)?.PriorityType == "Low")
                                                {
                                                    <span style="background-color: #D9FFD9; color: green; border-radius: 10px; padding: 5px 10px; font-weight: bold;">
                                                        <i class="bi bi-circle-fill" style="font-size: 10px; margin-right: 5px;"></i> Low
                                                    </span>
                                                }
                                                else
                                                {
                                                    <span style="background-color: #dee2e6; color: black; border-radius: 10px; padding: 5px 10px; font-weight: bold;">
                                                        @(Model.Priorities.FirstOrDefault(p => p.PriorityId == ticket.PriorityId)?.PriorityType ?? "General")
                                                    </span>
                                                }
                                            </td>


                                            <!-- Status -->
                                            <td>
                                                @if (Model.Statuses.FirstOrDefault(s => s.StatusId == ticket.StatusId)?.StatusType == "Open")
                                                {
                                                    <span style="background-color: #D9FFD9; color: green; border-radius: 10px; padding: 5px 10px; font-weight: bold;">
                                                        Open
                                                    </span>
                                                }
                                                else if (Model.Statuses.FirstOrDefault(s => s.StatusId == ticket.StatusId)?.StatusType == "Closed")
                                                {
                                                    <span style="background-color: #FFCCCC; color: red; border-radius: 10px; padding: 5px 10px; font-weight: bold;">
                                                        Closed
                                                    </span>
                                                }
                                                else
                                                {
                                                    <span style="background-color: #FFEDCC; color: #E68D4F; border-radius: 10px; padding: 5px 10px; font-weight: bold;">
                                                        In Progress
                                                    </span>
                                                }
                                            </td>

                                            <!-- Date Created -->
                                            <td>@ticket.DateCreated.ToString("yyyy-MM-dd")</td>

                                            <!-- Date Closed -->
                                            <td>@(ticket.DateClosed.HasValue ? ticket.DateClosed.Value.ToString("yyyy-MM-dd") : "(Not yet closed)")</td>

                                            <!-- Actions -->
                                            <td>
                                                <div class="btn-group shadow-sm" role="group" aria-label="Ticket Actions">
                                                    <a href="@Url.Action("DetailsTicket", "Student", new { id = ticket.TicketId })"
                                                       class="btn btn-sm"
                                                       style="background-color: #EBEBEB; color: #E68D4F; padding: 5px; font-size: 20px;"
                                                       onmouseover="this.style.backgroundColor='#d6d6d6'; this.style.color='#c0763d';"
                                                       onmouseout="this.style.backgroundColor='#EBEBEB'; this.style.color='#E68D4F';">
                                                        <i class="bi bi-eye"></i>
                                                    </a>
                                                    <button type="button"
                                                            class="btn btn-sm"
                                                            style="background-color: #EBEBEB; color: #E68D4F; padding: 5px; font-size: 20px;"
                                                            onclick="openDeleteModal(@ticket.TicketId)"
                                                            onmouseover="this.style.backgroundColor='#d6d6d6'; this.style.color='#c0763d';"
                                                            onmouseout="this.style.backgroundColor='#EBEBEB'; this.style.color='#E68D4F';">
                                                        <i class="bi bi-trash"></i>
                                                    </button>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                }
                                else
                                {
                                    <tr>
                                        <td colspan="9" class="text-center">No tickets available</td>
                                    </tr>
                                }
                            </tbody>

                        </table>
                    </div>
                    <!-- Pagination Controls -->
                    <nav aria-label="Pagination">
                        <div class="d-flex justify-content-center">
                            <div class="btn-group" role="group">
                                <!-- Previous Button -->
                                <a class="btn btn-outline-custom @(Model.CurrentPage <= 1 ? "disabled" : "")"
                                   href="@(Model.CurrentPage > 1 ? Url.Action("MyTickets", new { page = Model.CurrentPage - 1, categoryId = Model.CategoryId, statusId = Model.StatusId, priorityId = Model.PriorityId }) : "#")">
                                    Previous
                                </a>

                                <!-- Page Numbers -->
                                @for (int i = 1; i <= Model.TotalPages; i++)
                                {
                                    <a class="btn @(i == Model.CurrentPage ? "btn-custom-page" : "btn-outline-custom")"
                                       href="@Url.Action("MyTickets", new { page = i, categoryId = Model.CategoryId, statusId = Model.StatusId, priorityId = Model.PriorityId })">
                                        @i
                                    </a>
                                }

                                <!-- Next Button -->
                                <a class="btn btn-outline-custom @(Model.CurrentPage >= Model.TotalPages ? "disabled" : "")"
                                   href="@(Model.CurrentPage < Model.TotalPages ? Url.Action("MyTickets", new { page = Model.CurrentPage + 1, categoryId = Model.CategoryId, statusId = Model.StatusId, priorityId = Model.PriorityId }) : "#")">
                                    Next
                                </a>
                            </div>
                        </div>
                    </nav>

                </div>
            </div>
        </div>
    </div>

    <!-- Delete Confirmation Modal -->
    <div class="modal fade" id="deleteTicketModal" tabindex="-1" aria-labelledby="deleteTicketModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <!-- Form to handle deletion -->
                <form id="deleteTicketForm" method="post" asp-action="Delete" asp-controller="Student" method="post">
                    <div class="modal-header">
                        <h5 class="modal-title" id="deleteTicketModalLabel">Confirm Deletion</h5>
                    </div>
                    <div class="modal-body">
                        <p id="deleteTicketMessage">Are you sure you want to delete this ticket?</p>
                        <!-- Hidden field to pass the ticket ID -->
                        <input type="hidden" id="ticketIdToDelete" name="id" />
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" onclick="closeModal()">No</button>
                        <button type="submit" class="btn btn-danger">Yes</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</body>
</html>